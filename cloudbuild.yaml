options:
  logging: CLOUD_LOGGING_ONLY

steps:
  - id: 'branch name'
    name: 'alpine'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
       echo "*******************"
       echo "$BRANCH_NAME"
       echo "*******************"

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'check-version'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        whoami
        atlas -v

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'fetch-terraform-config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Retrieving .tfvars from Secret Manager..."
        gcloud secrets versions access latest --secret=terraform_config --format='get(payload.data)' | tr '_-' '/+' | base64 -d > terraform.tfvars
        mkdir workspace
        mv terraform.tfvars /workspace
        exit 0

  # - id: 'tf init'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: 'sh'
  #   args:
  #   - '-c'
  #   - |
  #       terraform init

  # - id: 'tf plan'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: 'sh'
  #   args:
  #   - '-c'
  #   - |
  #       terraform plan -var-file=/workspace/terraform.tfvars

  # - id: 'tf apply'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: 'sh'
  #   args:
  #   - '-c'
  #   - |
  #       if [[ "$BRANCH_NAME" == "main" ]]; then
  #         echo "Branch is 'main', procceding with terraform apply."
  #         terraform apply -var-file=/workspace/terraform.tfvars --auto-approve 
  #       else
  #         echo "Branch is not 'main', skipping terraform apply."
  #         exit 0
  #       fi